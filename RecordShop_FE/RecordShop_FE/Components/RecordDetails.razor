@using RecordShop
@using Microsoft.Extensions.Logging
@rendermode InteractiveServer
@inject ILogger<RecordDetails> logger
@inject NavigationManager navigationManager

<tr>
    @if (EditMode) 
    {
        <RecordEditor Album="Album" OnUpdate="UpdateAlbum"/>
    }
    else 
    {
        <RecordSummary 
            Album="Album" 
            StatusCode="StatusCode" 
            OnEditRecord="NavigateToEditForm"
        />
    }
</tr>

@code {
    private HttpManager httpUtils = new HttpManager();

    private bool EditMode { get; set; } = false;

    [Parameter]
    public int StatusCode { get; set; } = 200;

    [Parameter] 
    public Album? Album { get; set; }

    [Parameter] 
    public EventCallback<Album> OnUpdateAlbum { get; set; }

    private async Task DeleteRecord(int id)
    {
        var response = await httpUtils.DeleteRecordById(id);
        StatusCode = (int)response.StatusCode;
    }

    private void ToggleFormVisible(bool editMode) => EditMode = !editMode;

    private void NavigateToEditForm(Album record) {
        navigationManager.NavigateTo(navigationManager.BaseUri + $"records/edit/{record.Id}");
    }


    private void UpdateAlbum(Album album) {
        ToggleFormVisible(EditMode);
        Album = album;
        StatusCode = (int)httpUtils.PutRecord(album).StatusCode;
    }
}
